{"ast":null,"code":"// user.js\n\nimport axios from 'axios';\nimport config from '../config';\nexport async function verifyEmail(email) {\n  try {\n    const response = await axios.post(`${config.url}/user/verify-email`, {\n      email\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response.data.message || 'Error verifying email');\n  }\n}\nexport async function getPassword(email, verificationCode) {\n  try {\n    const response = await axios.post(`${config.url}/user/get-password`, {\n      email,\n      verificationCode\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response.data.message || 'Error retrieving password');\n  }\n}\n\n// Other functions like login and register\n\n/*import config from \"../config\";\nimport axios  from \"axios\";\n\nexport async function login(email, password) {\n  const body = { email, password };\n  const response = await axios.post(`${config.url}/user/login`, body);\n  return response.data;\n}\n\nexport async function register(fullName, email, password, phoneNO) {\n  const body = { fullName, email, password, phoneNO};\n  const response = await axios.post(`${config.url}/user/register`, body);\n  return response.data; // Assuming your backend sends back a JSON response with a \"status\" field\n}\n*/","map":{"version":3,"names":["axios","config","verifyEmail","email","response","post","url","data","error","Error","message","getPassword","verificationCode"],"sources":["D:/Innobyte/Client/src/Services/user.js"],"sourcesContent":["// user.js\n\nimport axios from 'axios';\nimport config from '../config';\n\nexport async function verifyEmail(email) {\n  try {\n    const response = await axios.post(`${config.url}/user/verify-email`, { email });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response.data.message || 'Error verifying email');\n  }\n}\n\nexport async function getPassword(email, verificationCode) {\n  try {\n    const response = await axios.post(`${config.url}/user/get-password`, { email, verificationCode });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response.data.message || 'Error retrieving password');\n  }\n}\n\n// Other functions like login and register\n\n\n\n\n/*import config from \"../config\";\nimport axios  from \"axios\";\n\nexport async function login(email, password) {\n  const body = { email, password };\n  const response = await axios.post(`${config.url}/user/login`, body);\n  return response.data;\n}\n\nexport async function register(fullName, email, password, phoneNO) {\n  const body = { fullName, email, password, phoneNO};\n  const response = await axios.post(`${config.url}/user/register`, body);\n  return response.data; // Assuming your backend sends back a JSON response with a \"status\" field\n}\n*/\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,WAAW;AAE9B,OAAO,eAAeC,WAAWA,CAACC,KAAK,EAAE;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAE,GAAEJ,MAAM,CAACK,GAAI,oBAAmB,EAAE;MAAEH;IAAM,CAAC,CAAC;IAC/E,OAAOC,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAACD,KAAK,CAACJ,QAAQ,CAACG,IAAI,CAACG,OAAO,IAAI,uBAAuB,CAAC;EACzE;AACF;AAEA,OAAO,eAAeC,WAAWA,CAACR,KAAK,EAAES,gBAAgB,EAAE;EACzD,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAE,GAAEJ,MAAM,CAACK,GAAI,oBAAmB,EAAE;MAAEH,KAAK;MAAES;IAAiB,CAAC,CAAC;IACjG,OAAOR,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAACD,KAAK,CAACJ,QAAQ,CAACG,IAAI,CAACG,OAAO,IAAI,2BAA2B,CAAC;EAC7E;AACF;;AAEA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}