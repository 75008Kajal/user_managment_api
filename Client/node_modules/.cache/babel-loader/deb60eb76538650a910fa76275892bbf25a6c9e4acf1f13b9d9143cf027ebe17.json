{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hackathon\\\\Client\\\\src\\\\pages\\\\displaycat.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { allCat } from \"../Services/cat\";\nimport Sidebar from \"../Component/sidebar\";\nimport Category from \"../Component/category\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DisplayCat() {\n  _s();\n  const [categories, setCategories] = useState([]);\n\n  // used to perform action(s) after component gets loaded\n  useEffect(() => {\n    loadCategories();\n  }, []);\n  const loadCategories = async () => {\n    const result = await allCat();\n    if (result[\"status\"] === \"success\") {\n      setCategories(result[\"data\"]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col whole\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title \",\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            children: /*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    fontWeight: \"600\",\n                    fontSize: 25,\n                    width: 250\n                  },\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    fontWeight: \"600\",\n                    fontSize: 25\n                  },\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), categories.map(category => {\n            return /*#__PURE__*/_jsxDEV(Category, {\n              title: category.title,\n              description: category.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(DisplayCat, \"+ijgB8ROEl0Dkz53OTIi8GynN6s=\");\n_c = DisplayCat;\nexport default DisplayCat;\nvar _c;\n$RefreshReg$(_c, \"DisplayCat\");","map":{"version":3,"names":["useEffect","useState","allCat","Sidebar","Category","jsxDEV","_jsxDEV","DisplayCat","_s","categories","setCategories","loadCategories","result","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","fontWeight","fontSize","width","map","category","title","description","_c","$RefreshReg$"],"sources":["D:/Hackathon/Client/src/pages/displaycat.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { allCat } from \"../Services/cat\";\nimport Sidebar from \"../Component/sidebar\";\nimport Category from \"../Component/category\";\n\nfunction DisplayCat() {\n  const [categories, setCategories] = useState([]);\n\n  // used to perform action(s) after component gets loaded\n  useEffect(() => {\n    loadCategories();\n  }, []);\n\n  const loadCategories = async () => {\n    const result = await allCat();\n    if (result[\"status\"] === \"success\") {\n      setCategories(result[\"data\"]);\n    }\n  };\n\n  return (\n    <div>\n      <Sidebar />\n      <div className=\"row \">\n        <div className=\"col\"></div>\n        <div className=\"col whole\">\n          <h1 className=\"title \">Category</h1>\n          <div className=\"form\">\n            <table>\n              <thead>\n                <tr>\n                  <td style={{ fontWeight: \"600\", fontSize: 25, width: 250 }}>\n                    Title\n                  </td>\n                  <td style={{ fontWeight: \"600\", fontSize: 25 }}>\n                    Description\n                  </td>\n                </tr>\n              </thead>\n            </table>\n            {categories.map((category) => {\n              return (\n                <Category\n                  title={category.title}\n                  description={category.description}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DisplayCat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}